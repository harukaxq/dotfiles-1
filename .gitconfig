[alias]
	st = status
	ci = commit
	co = checkout
	b = branch

	oneline = log --oneline
	# e14d631 (HEAD, origin/master, origin/HEAD, master) Merge branch 'maint'
	# 0f64a5a Merge branch 'rr/misc-fixes'
	# ef563de convert.c: Fix return type of git_path_check_eol()

	graph = log --oneline --graph
	# *   e14d631 (HEAD, origin/master, origin/HEAD, master) Merge branch 'maint'
	# |\
	# | * 1e501a7 (origin/maint) documentation fix: git difftool uses diff tools, not merge tools.
	# * |   0f64a5a Merge branch 'rr/misc-fixes'
	# |\ \
	# | * | ef563de convert.c: Fix return type of git_path_check_eol()
	# * | | 05bab3e config.c: Fix a static buffer overwrite bug by avoiding mkpath()

	last = log -1
	# show the commit message of HEAD

	patch = add --patch
	# add hunks of code interactively
	# useful for separating a bunch of changes into logical commits

	amend = commit --amend
	# take staging and push it into the previous commit
	# useful when adding small chunks to a WIP commit

	su = submodule update --init
	# update or initialize each submodule

	refresh = !STASH=$(git stash) && git fetch && git rebase origin/master && test \"$STASH\" != \"No local changes to save\" && git stash pop

	# requires Git 1.7.11.3 or later
	reword = commit --amend --only --

[color]
	ui = auto

[color "diff-highlight"]
	oldNormal = "red bold"
	oldHighlight = "red bold 52"
	newNormal = "green bold"
	newHighlight = "green bold 22"

[color "status"]
	untracked = blue

[core]
	attributesfile = ~/.gitattributes
	editor = vim
	# global gitignore, useful for hiding editor files
	excludesfile = ~/.gitexcludes
	pager = zsh -c 'diff-highlight | less -iFMRSX' -

[diff]
	algorithm = histogram

[help]
	autocorrect = 10
	# $ git lgo
	# WARNING: You called a Git command named 'lgo', which does not exist.
	# Continuing under the assumption that you meant 'log'
	# in 1.0 seconds automatically...

[log]
	decorate = short

[pager]
	show-branch = true
	status = true # Use pager for `git status`

[push]
	default = upstream

[rebase]
	autosquash = true
	# for fixup hotness later

[rerere]
	enabled = true
	# Reuse recorded resolution of conflicted merges
	# see `man git-rerere'

[status]
	submodulesummary = true

[user]
	gerrit = joe.lencioni
	email = joe.lencioni@brigade.com
	name = Joe Lencioni
